# -*- mode: ruby -*-
# vi: set ft=ruby :

HOSTS = {
  'lb1' => { :private_ip => '10.0.1.3/24' },
  'lb2' => { :private_ip => '10.0.1.4/24' },
  'tw1' => { :private_ip => '10.0.1.5/24' },
  'tw2' => { :private_ip => '10.0.1.6/24' },
  'tw3' => { :private_ip => '10.0.1.7/24' },
  'tw4' => { :private_ip => '10.0.1.8/24' },
  'tw5' => { :private_ip => '10.0.1.9/24' },
  'tw6' => { :private_ip => '10.0.1.10/24' },
  'db1' => { :private_ip => '10.0.1.11/24' },
}

GROUPS = {
  'backend_servers' => [ 'tw1', 'tw2', 'tw3', 'tw4', 'tw5', 'tw6' ],
  'consul_servers'  => [ 'tw1', 'tw2', 'tw3' ],
  'database_server' => [ 'db1' ],
  'docker_registry' => [ 'db1' ],
  'load_balancers'  => [ 'lb1', 'lb2' ],
  'load_balancers:vars' => { 'loadbalancer_password' => 'foobar99', 'loadbalancer_external_ip' => '10.0.1.2' },
  'nfs_server' => [ 'db1' ],
}

Vagrant.configure(2) do |config|
  HOSTS.each do |name, conf|
    config.vm.define name do |node|
      node.vm.hostname = name
      node.vm.network "private_network", ip: conf[:private_ip].split('/').first

      # Provision the machines with Ansible when the last one is provisioned
      if name == HOSTS.keys[HOSTS.length - 1]
        # Default provisioning
        node.vm.provision "ansible" do |ansible|
          ansible.playbook = "../ansible/cluster.yml"
          ansible.groups = GROUPS
          ansible.host_vars = HOSTS
          ansible.limit = 'all'
          ansible.sudo = true
          # ansible.verbose = 'vvv'
        end
      end
    end
  end

  config.vm.box = "teamwire/server"

  # The ssh user name used to connect to the created VM with "vagrant ssh"
  config.ssh.username = "teamwire"

  # Path to the ssh key for that user
  config.ssh.private_key_path = File.expand_path("~/.ssh/teamwire-server-vm-admin")

  # Disable the default shared folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider :vmware_fusion do |v|
    v.vmx["memsize"] = "1024"
  end

  config.vm.provider "virtualbox" do |vm|
    vm.customize ["modifyvm", :id, "--memory", "1024"]
    vm.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  config.vm.provider "libvirt" do |vm|
    vm.memory = 1024
  end
end
