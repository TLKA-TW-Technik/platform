---
- name: Install GlusterFS server and client
  apt: name={{ item }}
  with_items:
    - glusterfs-server
    - glusterfs-client

- name: Create GlusterFS brick
  file: path={{ gluster_brick_dir }} state=directory

- name: Start GlusterFS server
  service: name=glusterfs-server state=started enabled=true

- name: Configure peers from the first host
  command: gluster peer probe {{ item }}
  with_items: '{{groups[glusterfs_peer_group]}}'
  when: inventory_hostname == "{{ groups[glusterfs_peer_group][0] }}"
  ignore_errors: yes

- name: Create {{gluster_volume}} gluster_volume
  shell: gluster volume info {{gluster_volume}} || (gluster volume create {{gluster_volume}} replica 3 transport tcp {{ groups[glusterfs_peer_group] | join(':' + gluster_brick_dir + ' ') }}:{{gluster_brick_dir}} force && gluster volume start {{gluster_volume}})
  when: inventory_hostname == "{{ groups[glusterfs_peer_group][0] }}"

- name: Mount GlusterFS from localhost
  mount:
    name: "{{ gluster_mountpoint }}"
    src: "{{ inventory_hostname }}:{{ gluster_volume }}"
    fstype: glusterfs
    opts: defaults,_netdev,backupvolfile-server={{ groups[glusterfs_peer_group] | difference([inventory_hostname]) | first }}
    state: mounted
  when: inventory_hostname in groups[glusterfs_peer_group]

- name: Mount GlusterFS from cluster
  mount:
    name: "{{ gluster_mountpoint }}"
    src: "{{ groups[glusterfs_peer_group][0] }}:{{ gluster_volume }}"
    fstype: glusterfs
    opts: defaults,_netdev,backupvolfile-server={{ groups[glusterfs_peer_group][1] }}
    state: mounted
  when: not inventory_hostname in groups[glusterfs_peer_group]
