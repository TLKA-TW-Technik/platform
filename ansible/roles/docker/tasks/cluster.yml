---
- name: Run registrator in clustered setups
  when: private_ip is defined and 'consul_servers' in groups
  docker:
    name: registrator
    image: "{{ registrator_version }}"
    state: reloaded
    restart_policy: always
    log_driver: syslog
    log_opt:
      tag: registrator
      syslog-facility: local6
    net: host
    volumes: "/var/run/docker.sock:/tmp/docker.sock"
    command: "-ip {{ private_ip }} consul://localhost:8500"

- name: Run Swarm manager
  when: "'consul_servers' in group_names"
  docker:
    name: swarm-manager
    image: "{{ swarm_version }}"
    state: reloaded
    restart_policy: always
    log_driver: syslog
    log_opt:
      tag: swarm-manager
      syslog-facility: local6
    net: host
    ports: "4000:4000"
    command: "manage -H :4000 --replication --advertise {{ private_ip }}:4000 consul://localhost:8500"

- name: Ensure pip and Docker Compose requirements are installed on manager nodes (Debian 8)
  apt: pkg={{ item }} state=present default_release=jessie-backports install_recommends=no
  when: "'consul_servers' in group_names and ansible_distribution_release == 'jessie'"
  with_items:
    - python-pip
    - python-backports.ssl-match-hostname
    - python-docopt
    - python-enum34
    - python-functools32
    - python-ipaddress
    - python-jsonschema
    - python-requests
    - python-texttable

- name: Ensure pip and Docker Compose requirements are installed on manager nodes (Debian 9)
  apt: pkg={{ item }} state=present default_release=stretch install_recommends=no
  when: "'consul_servers' in group_names and ansible_distribution_release == 'stretch'"
  with_items:
    - python-pip
    - python-backports.ssl-match-hostname
    - python-docopt
    - python-enum34
    - python-functools32
    - python-ipaddress
    - python-jsonschema
    - python-requests
    - python-texttable

- name: Check if a wheelhouse exists
  stat: path=/var/cache/wheelhouse
  register: wheelhouse

- name: Check if Docker Compose is installed
  stat: path=/usr/local/bin/docker-compose
  register: compose

- name: Install Python wheel (online)
  apt: pkg=python-wheel
  when: "'consul_servers' in group_names and not wheelhouse.stat.exists"

# Hackish, but Docker Compose's dependencies are notoriously broken
- name: Prepare Docker Compose installation (online)
  command: "pip wheel --no-deps -w /var/cache/wheelhouse {{ item }}"
  with_items:
    - cached-property==1.2.0
    - docker-compose==1.8.1
    - docker-py===1.10.3
    - docker-pycreds==0.2.1
    - dockerpty==0.4.1
    - websocket_client==0.32.0
  when: "'consul_servers' in group_names and not wheelhouse.stat.exists"

- name: Install Docker Compose
  pip: name=/var/cache/wheelhouse/{{ item }} extra_args="--no-deps"
  when: "'consul_servers' in group_names and not compose.stat.exists"
  with_items:
    - cached_property-1.2.0-py2.py3-none-any.whl
    - docker_compose-1.8.1-py2-none-any.whl
    - docker_py-1.10.3-py2.py3-none-any.whl
    - docker_pycreds-0.2.1-py2.py3-none-any.whl
    - dockerpty-0.4.1-py2-none-any.whl
    - websocket_client-0.32.0-py2-none-any.whl

- name: Run Swarm agent
  when: "'backend_servers' in group_names"
  docker:
    name: swarm-agent
    image: "{{ swarm_version }}"
    state: reloaded
    restart_policy: always
    log_driver: syslog
    log_opt:
      tag: swarm-agent
      syslog-facility: local6
    net: host
    command: "join --advertise={{ private_ip }}:2375 consul://localhost:8500"
