---
# Install and configure docker
- name: Add the Docker repository signing key (direct connection)
  apt_key: id=58118E89F3A912897C070ADBF76221572C52609D keyserver=hkp://p80.pool.sks-keyservers.net:80 state=present
  when: http_proxy is not defined
- name: Add the Docker repository signing key (via proxy server)
  command: /bin/bash -c "gpg --keyring /etc/apt/trusted.gpg -k 2C52609D || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --keyserver-options http-proxy=\"{{http_proxy}}\" --recv-keys 58118E89F3A912897C070ADBF76221572C52609D"
  when: http_proxy is defined
- name: Add the Docker repository
  apt_repository: repo='deb https://apt.dockerproject.org/repo {{ansible_distribution|lower}}-{{ansible_distribution_release}} main' state=present

- name: Install Docker
  apt: pkg=docker-engine state=present

- name: Install pip (Ubuntu)
  apt: pkg=python-pip state=present
  when: ansible_distribution == "Ubuntu"

- name: Install docker-py 1.0 (Ubuntu)
  pip: name=docker-py version=1.0.0
  when: ansible_distribution == "Ubuntu"

- name: Install python-docker (Debian)
  apt: pkg=python-docker default_release=jessie-backports state=present
  when: ansible_distribution == "Debian"

- name: Add user 'teamwire' to the docker group
  user: name=teamwire groups=docker append=yes

- name: Configure proxy for docker
  when: http_proxy is defined
  lineinfile: dest=/etc/default/docker regexp=http_proxy line='export http_proxy="{{http_proxy}}"'
  notify: restart docker

- name: Disable proxy for docker when no proxy is configured
  when: http_proxy is not defined
  lineinfile: dest=/etc/default/docker regexp=http_proxy line='# export http_proxy=""'
  notify: restart docker

# Make sure docker is restarted before the containers are set up, otherwise
# the restart would kill the running containers. We need to restart before the
# following step, otherwise the login would fail when a proxy is configured.
- meta: flush_handlers

- name: Log in on Docker Hub (Ubuntu)
  command: docker login -e "{{ dockerhub_email }}" -u "{{ dockerhub_username }}" -p "{{ dockerhub_password }}"
  become: True
  become_user: teamwire
  when: config_done is defined and ansible_distribution == "Ubuntu"
  args:
    creates: /home/teamwire/.docker/config.json

# Requires docker-py >= 1.7, hence can only be used on Debian
- name: Log in on Docker Hub (Debian)
  when: config_done is defined and ansible_distribution == "Debian"
  docker_login:
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"
    email: "{{ dockerhub_email }}"

- name: Configure firewall to allow Docker containers access to the host
  ufw: rule=allow interface=docker0 direction=in
