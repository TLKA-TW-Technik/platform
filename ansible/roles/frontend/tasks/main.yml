---
- name: Install nginx
  apt: name=nginx-light state=present

- name: Configure nginx
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf
  notify: reload nginx

- name: Disable nginx default site
  file:
    dest: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: Copy the SSL certificate
  copy:
    src: "{{ ssl_certfile }}"
    dest: /etc/ssl/private/server_and_intermediate_and_root.crt
    mode: 0640
  when: ssl_certfile is defined
  notify: reload nginx

- name: Create the SSL certificate chain
  template:
    src:  server_and_intermediate_and_root.crt.j2
    dest: /etc/ssl/private/server_and_intermediate_and_root.crt
    mode: 0640
  when: ssl_server_certificate is defined and ssl_intermediate_certificate is defined and ssl_root_certificate is defined
  notify: reload nginx

- name: Create the SSL intermediate and root certificate file
  template:
    src:  intermediate_and_root.crt.j2
    dest: /etc/ssl/private/intermediate_and_root.crt
    mode: 0640
  when: ssl_intermediate_certificate is defined and ssl_root_certificate is defined
  notify: reload nginx

- name: Copy the SSL key
  copy:
    src: "{{ ssl_keyfile }}"
    dest: /etc/ssl/private/teamwire-backend.key
    mode: 0640
  when: ssl_keyfile is defined
  notify: reload nginx

- name: Generate a new Diffie-Hellman group
  command: /usr/bin/openssl dhparam -out /etc/ssl/private/dhparams.pem 2048
  when: ssl_keyfile is defined
  args:
    creates: /etc/ssl/private/dhparams.pem

- name: Check SSL chain is valid (hasn't expired, modern algorithm and key matches certificate)
  openssl_certificate:
    path: /etc/ssl/private/server_and_intermediate_and_root.crt
    privatekey_path: /etc/ssl/private/teamwire-backend.key
    provider: assertonly
    signature_algorithms:
      - sha224WithRSAEncryption
      - sha256WithRSAEncryption
      - sha384WithRSAEncryption
      - sha512WithRSAEncryption
      - sha224WithECDSAEncryption
      - sha256WithECDSAEncryption
      - sha384WithECDSAEncryption
      - sha512WithECDSAEncryption
    has_expired: False
  when: ssl_keyfile is defined
  run_once: true

# open firewall ports for the web server
- ufw: rule=allow port=80 proto=tcp
  when: config_done is defined and ssl_keyfile is not defined

- ufw: rule=allow port=80 proto=tcp delete=yes
  when: ssl_keyfile is defined

- ufw: rule=allow port=443 proto=tcp
  when: ssl_keyfile is defined

- name: Re-use sockets in TIME_WAIT state for new connections
  sysctl:
    name: net.ipv4.tcp_tw_reuse
    value: 1
    state: present

- name: Ensure netfilter can handle a sufficient amount of connections
  sysctl:
    name: net.nf_conntrack_max
    value: 65536
    state: present

- name: Increase number of socket connection backlog
  sysctl:
    name: net.core.somaxconn
    value: 1024
    state: present
    reload: yes

- include_tasks: single.yml
  when: "'frontend_servers' not in groups"

- include_tasks: cluster.yml
  when: "'frontend_servers' in groups"
