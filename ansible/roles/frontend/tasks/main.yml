---
- name: Install nginx
  apt: name=nginx-light state=present

- name: Configure nginx
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf
  notify: reload nginx

- name: Disable nginx default site
  file:
    dest: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: Copy the SSL certificate
  copy: src={{ ssl_certfile }} dest=/etc/ssl/private/teamwire-backend.crt mode=0640
  when: ssl_certfile is defined

- name: Copy the SSL key
  copy: src={{ ssl_keyfile }} dest=/etc/ssl/private/teamwire-backend.key mode=0640
  when: ssl_keyfile is defined

- name: Generate a new Diffie-Hellman group
  command: /usr/bin/openssl dhparam -out /etc/ssl/private/dhparams.pem 2048
  when: ssl_certfile is defined and ssl_keyfile is defined
  args:
    creates: /etc/ssl/private/dhparams.pem

# open firewall ports for the web server
- ufw: rule=allow port=80 proto=tcp
  when: config_done is defined and ssl_certfile is not defined and ssl_keyfile is not defined
- ufw: rule=allow port=80 proto=tcp delete=yes
  when: ssl_certfile is defined and ssl_keyfile is defined
- ufw: rule=allow port=443 proto=tcp
  when: ssl_certfile is defined and ssl_keyfile is defined

- name: Re-use sockets in TIME_WAIT state for new connections
  sysctl: name=net.ipv4.tcp_tw_reuse value=1 state=present

- name: Ensure netfilter can handle a sufficient amount of connections
  sysctl: name=net.nf_conntrack_max value=65536 state=present

- include: single.yml
  when: "'frontend_servers' not in groups"

- include: cluster.yml
  when: "'frontend_servers' in groups"
