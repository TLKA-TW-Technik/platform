---
- name: Ensure mysql_root_password is configured before installing the Database
  fail: msg="MySQL root password is not defined. Please check the configuration file"
  when: config_done is defined and mysql_root_password is defined and mysql_root_password == None

- name: Check if installing a database cluster
  set_fact:
    galera_cluster: True
  when: '"database_servers" in groups and groups["database_servers"] | length > 1'

- name: Check if the MariaDB repository signing key needs to be installed
  shell: bash -c "gpg --keyring /etc/apt/trusted.gpg -k 1BB943DB > /dev/null 2>&1 && echo present || echo absent"
  when: ansible_distribution == "Debian"
  register: mariadb_repo_key

- name: Add MariaDB repo signing key (direct, cluster setups)
  apt_key:
    keyserver: "hkp://keyserver.ubuntu.com:80"
    id: "cbcb082a1bb943db"
  when: ansible_distribution == "Debian" and mariadb_repo_key.stdout == "absent" and http_proxy is not defined

- name: Add MariaDB repo signing key (via proxy, cluster setups)
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options http-proxy="{{http_proxy}}" --recv-keys cbcb082a1bb943db
  when: ansible_distribution == "Debian" and mariadb_repo_key.stdout == "absent" and http_proxy is defined

- name: Configure MariaDB repository (cluster setups)
  apt_repository:
    repo: "deb http://ftp.hosteurope.de/mirror/mariadb.org/repo/10.1/debian jessie main"
    state: present
    update_cache: yes
  when: ansible_distribution == "Debian"

- name: Install MariaDB
  apt: name={{item}} state=present
  with_items:
  - mariadb-server
  - mariadb-client
  - python-mysqldb
  register: mysql_initial_installation

- name: Create MariaDB binlog directory
  file:
    dest: /var/lib/mysql-binlog
    owner: mysql
    group: mysql
    mode: 0770
    state: directory
  when: '"database_servers" not in groups'

# Unfortunately MariaDB cannot be configure to listen on multiple interfaces
- name: Configure MariaDB to listen on all interfaces
  lineinfile:
    dest: /etc/mysql/my.cnf
    regexp: ^bind-address\s*=\s*127.0.0.1
    backrefs: yes
    line: "bind-address=0.0.0.0"
  notify: restart MariaDB

- name: Increase max_allowed_packet size
  replace:
    dest: /etc/mysql/my.cnf
    regexp: ^max_allowed_packet\s*=\s*\d+M
    replace: "max_allowed_packet=64M"
  notify: restart MariaDB

- name: Increase maximum allowed connections
  lineinfile:
    dest: /etc/mysql/my.cnf
    regexp: ^max_connections
    line: "max_connections = 512"
  notify: restart MariaDB

- name: Set UTF8 as default character set
  copy: src=utf8.cnf dest=/etc/mysql/conf.d/utf8.cnf
  notify: restart MariaDB

- name: Set UTC as default time zone
  copy: src=timezone.cnf dest=/etc/mysql/conf.d/timezone.cnf
  notify: restart MariaDB

- name: Log slow queries
  copy: src=slow_query_log.cnf dest=/etc/mysql/conf.d/slow_query_log.cnf
  notify: restart MariaDB

- name: Disable unsecure functionality
  copy: src=security.cnf dest=/etc/mysql/conf.d/security.cnf
  notify: restart MariaDB

- name: Enable binary logs
  template: src=binlog.cnf.j2 dest=/etc/mysql/conf.d/binlog.cnf
  notify: restart MariaDB
  when: '"database_servers" not in groups'

- name: Start and enable MariaDB server
  service: name=mysql state=started enabled=yes

# Make sure MariaDB is restarted before the database is created, otherwise
# the configured defaults are not used.
- meta: flush_handlers

- name: Set password for MariaDB root user
  mysql_user:
    name: root
    password: "{{mysql_root_password}}"
  when: mysql_initial_installation.changed

- name: Set password for the other MariaDB root users
  mysql_user:
    name: root
    password: "{{mysql_root_password}}"
    host: "{{item}}"
    login_user: root
    login_password: "{{mysql_root_password}}"
  when: mysql_root_password is defined and (galera_cluster is not defined or inventory_hostname == groups['database_servers'][0])
  with_items:
    - 127.0.0.1
    - ::1
    - "{{external_hostname|default()}}"

- name: Create Teamwire database
  mysql_db:
    name: "{{ teamwire_db_name | default('teamwire') }}"
    state: present
    login_user: root
    login_password: "{{mysql_root_password}}"
  when: galera_cluster is not defined or inventory_hostname == groups['database_servers'][0]

- name: Create Teamwire database user
  mysql_user:
    name: "{{ teamwire_db_user | default('teamwire') }}"
    host: "%"
    password: "{{teamwire_db_password}}"
    priv: "{{ teamwire_db_name | default('teamwire') }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{mysql_root_password}}"
  when: config_done is defined and (galera_cluster is not defined or inventory_hostname == groups['database_servers'][0])

- include: replication.yml
  when: server_id is defined and partner_node is defined and replication_password is defined

- include: cluster.yml
  when: galera_cluster is defined
