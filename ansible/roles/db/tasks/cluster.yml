---
- name: Ensure database_cluster_ip is configured before installing the Database
  fail: msg="Virtual DB server IP address is not defined. Please check the inventory file"
  when: database_cluster_ip is not defined or database_cluster_ip == None

- name: Ensure xtrabackup_password is configured before installing the Database
  fail: msg="Database replication user password is not defined. Please check the configuration file"
  when: xtrabackup_password is not defined or xtrabackup_password == None

- name: Check if the Percona repository signing key needs to be installed
  shell: bash -c "gpg --keyring /etc/apt/trusted.gpg -k 9334A25F8507EFA5 > /dev/null 2>&1 && echo present || echo absent"
  when: ansible_distribution == "Debian"
  register: percona_repo_key

- name: Add Percona repo signing key (direct)
  apt_key:
    id: 9334A25F8507EFA5
    keyserver: hkp://keyserver.ubuntu.com:80
    state: present
  when: percona_repo_key.stdout == "absent" and http_proxy is not defined

- name: Add Percona repo signing key (via proxy)
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options http-proxy="{{http_proxy}}" --recv-keys 9334A25F8507EFA5
  when: percona_repo_key.stdout == "absent" and http_proxy is defined

- name: Configure Percona repository (cluster setups)
  apt_repository: repo="deb http://repo.percona.com/apt jessie main" state=present update_cache=yes

- name: Install Galera and requirements
  apt: name={{ item }} state=present
  with_items:
  - galera
  - mytop
  - percona-xtrabackup-24
  - socat

- name: Create database replication user
  mysql_user:
    host: localhost
    name: xtrabackup
    password: "{{ xtrabackup_password }}"
    priv: "*.*:RELOAD,LOCK TABLES,REPLICATION CLIENT,PROCESS"
    login_user: root
    login_password: "{{mysql_root_password}}"
  when: inventory_hostname == groups['database_servers'][0]

- name: Write Galera cluster configuration
  template:
    src: cluster.conf.j2
    dest: /etc/mysql/conf.d/cluster.cnf
    mode: 0644

- name: Create clustercheck database user
  mysql_user:
    name: clustercheck
    host: localhost
    password: "{{ clustercheck_password }}"
    priv: "*.*:PROCESS"
    login_user: root
    login_password: "{{mysql_root_password}}"
  when: inventory_hostname == groups['database_servers'][0]

# Clustercheck script from https://github.com/olafz/percona-clustercheck
# Licensed under the BSD license
- name: Install Galera cluster check script
  copy: src=clustercheck dest=/usr/local/bin/clustercheck mode=0755

- name: Install keepalived
  apt: pkg=keepalived

- name: Allow incoming keepalived multicast traffic
  ufw: rule=allow src=224.0.0.18

- name: Write keepalived configuration file
  template: src=keepalived.conf.j2 dest=/etc/keepalived/keepalived.conf mode=0640
  notify: restart keepalived
