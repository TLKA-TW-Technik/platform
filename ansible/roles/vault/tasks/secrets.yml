  - name: Check Vault seal status
    fail: msg="Vault is not in an unsealed state, please run 'twctl secrets unseal'."
    when: ansible_local.vault.sealed != "false"

  - name: Load user-specified secrets
    set_fact:
      secrets: "{{ secrets|combine(user_secrets) }}"
    when: user_secrets is defined

  - block:
      - name: Set Vault token
        slurp:
          src: "~/.vault-token"
        register: vault_token
        no_log: true
    always:
      - name: Check token file exists and contains an entry
        fail: msg="Vault token not found on {{ inventory_hostname }}, please ensure ~/.vault-token exists and contains your root token."
        when: vault_token.content is not defined or vault_token.content | b64decode == ""
    run_once: true

  - name: Read secrets
    uri:
      url: "{{ ansible_local.vault.address }}/v1/{{ item.value.path }}"
      headers:
        X-VAULT-TOKEN: "{{vault_token.content | b64decode }}"
      validate_certs: yes
      body_format: json
    register: read
    with_dict:
      - "{{ secrets }}"
    no_log: true
    run_once: true

  - name: Set secret variables
    set_fact:
      "{{item[1].item.key}}": "{{item[1].json.data.value}}"
    no_log: true
    run_once: true
    delegate_facts: True
    delegate_to: "{{ item[0] }}"
    with_nested:
      - "{{ groups['all'] }}"
      - "{{read.results}}"

  - name: Set flag to confirm the secrets have been read from Vault
    set_fact:
      secrets_read: true
