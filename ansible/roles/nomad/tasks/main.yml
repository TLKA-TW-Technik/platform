- name: Check if Nomad is already installed
  stat: path=/usr/local/bin/nomad
  register: nomad_binary

- name: Download Nomad
  get_url:
    url: https://releases.hashicorp.com/nomad/{{nomad_version}}/nomad_{{nomad_version}}_linux_amd64.zip
    dest: /var/cache/downloads/nomad_{{nomad_version}}_linux_amd64.zip
    checksum: sha256:{{nomad_checksum}}
    mode: 0440
    use_proxy: '{{ "yes" if http_proxy is defined else omit }}'
  register: nomad_downloaded
  environment:
    https_proxy: "{{ http_proxy }}"

- name: Install the Nomad binary
  unarchive:
    src: /var/cache/downloads/nomad_{{nomad_version}}_linux_amd64.zip
    dest: /usr/local/bin
    mode: 0755
    copy: no
  notify: Restart Nomad agent
  when: nomad_downloaded.changed or not nomad_binary.stat.exists

- name: Create Nomad config firectory
  file: dest=/etc/nomad state=directory mode=0755

- name: Create Nomad data directory
  file: dest=/var/lib/nomad state=directory mode=0755

- name: Write Nomad config
  template: src=nomad.hcl.j2 dest=/etc/nomad/nomad.hcl
  notify: Restart Nomad agent

- name: Nomad systemd config
  copy: src=nomad.service dest=/etc/systemd/system/nomad.service
  notify:
    - Restart Nomad agent

- name: Enable the Nomad service
  service: name=nomad state=started enabled=yes daemon_reload=yes

# Check if Vault has been bootstrapped & integrate Nomad with it if a policy doesn't exist
- name: Check if Vault has been bootstrapped
  stat: path=/etc/vault-bootstrapped
  register: vault_bootstrapped
  run_once: True
  delegate_to: "{{ groups.consul_servers | first }}"

- name: Check if Nomad-server policy exists
  command: vault policy read nomad-server
  ignore_errors: True
  register: policy_check
  run_once: True
  delegate_to: "{{ groups.consul_servers | first }}"
  when: vault_bootstrapped.stat.exists

- include: vault-integration.yml
  when: vault_bootstrapped.stat.exists and policy_check.stderr is defined and "No policy" in policy_check.stderr