---
- hosts: all
  pre_tasks:
    - name: Check Ansible version
      assert:
        that: "ansible_version.full is version_compare('2.5.4', '>=')"
        msg:
          - "Ansible 2.5.4 is required, please run the upgrade procedure"
          - "If running a single-server setup, run: ansible-playbook -i hosts playbooks/procedures/upgrade-ansible.yml"
          - "If running a clustered-server setup, run: ansible-playbook -i cluster_hosts playbooks/procedures/upgrade-ansible.yml"

- name: Get current git tag
  hosts: all
  tasks:
  - command: "git describe --always --tags --abbrev=0"
    args:
      chdir: "/home/teamwire/platform"
    register: current_local_tag

- name: Set current git tag (incomplete) in /etc/platform_version
  hosts: all
  tasks:
  - copy:
      dest: /etc/platform_version
      content: '{{ current_local_tag.stdout }} (incomplete)'
      owner: root
      group: root
      mode: 0644

- name: Vault Status check
  hosts: local:consul_servers
  tasks:
    - include_role:
        name: vault
        tasks_from: secrets
      when: ansible_local.vault is defined and ansible_local.vault.initialized == "true" and secrets_read is not defined

- name: Apply common configuration to all nodes
  hosts: all
  roles:
    - common

- name: Deploy and configure external storage client
  hosts: all
  roles:
    - { role: storage_client, when external_storage_path is defined }

- name: Deploy Vault secret system
  hosts: all
  roles:
    - { role: vault, when: config_done is defined }

- name: Deploy and configure MySQL database
  hosts: all
  roles:
    - { role: db, when: config_done is defined and mysql_host is not defined and oracle_host is not defined }

- name: Deploy and configure Redis database
  hosts: all
  roles:
    - { role: redis, when: config_done is defined }

- name: Deploy and configure the backend server
  hosts: all
  roles:
    - docker
    - { role: backend, when: config_done is defined }
    - { role: frontend, when: config_done is defined }

- name: Deploy monitoring services
  hosts: all
  roles:
    - { role: monitoring, when: config_done is defined and enable_monitoring is defined }

- name: Set current tag (COMPLETE) in /etc/platform_version
  hosts: all
  tasks:
  - copy:
      dest: /etc/platform_version
      content: '{{ current_local_tag.stdout }}'
      owner: root
      group: root
      mode: 0644
