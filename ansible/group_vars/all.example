---
# Copy this file to "all" and add values for the parameters.
#
# Please leave a space after the colon (:) as in the preconfigured values.
# When a value contains a colon (:), it must be enclosed in double quotes.
#
# To activate an optional configuration values, uncomment the line by removing
# the hash (#) in front of the parameter.

# Uncomment the following line when you are finished setting all configuration
# items, only then the configuration can be performed.
# config_done: true

# Insert your Docker Hub credentials below
dockerhub_username:
dockerhub_password:
dockerhub_email:

# The external fully qualified host name under which the clients can access
# this server, e.g. "teamwire.example.com"
external_hostname:

# Uncomment the following line if you want to disable SSH logins with passwords.
# Make sure to test your SSH keys first, otherwise this you might lock yourself
# out of the server.
# ssh_disable_passwords: True

# If you need a proxy for outgoing connections, you can uncomment the following
# line and adapt it to your environment. The proxy server must also support
# HTTPS.
# http_proxy: "http://your.proxy:3128"

##############################################################################
## APPLICATION
##############################################################################

# Allow users that were not invited or imported by CSV to register on this
# server. Please note that this only configures the default for newly created
# organisations; the default configuration can be changed by an administrator.
allow_unknown_users: no

# You'll receive this key with your other credentials.
gcm_api_key:

# You've received a certificate file with your other credentials. Copy
# the file to this virtual machine and give the full path to it here,
# e.g. "/home/teamwire/example.pem".
# When you have resigned the app with your corporate certificate, use
# the matching APNS certificate instead.
apns_certificate:

# When you have resigned the app with your corporate certificate, enter the
# new app id below and uncomment the line.
# apns_appid:

# When you want to install your SSL certificate on the backend server, add the
# full paths to the key file and the certificate file below and remove the
# hash. When you configure these values, unencrypted access to the backend
# (i.e. access via the HTTP protocol on port 80) will be disabled.
# ssl_certfile:
# ssl_keyfile:

##############################################################################
## DATABASE
##############################################################################

# Define the MySQL user password
# The application expects the user name "teamwire"
teamwire_db_password: teamwire

# Define the database encryption key.
# This key must be 32 byte (i.e. 256 bit) long.
aes_key:

# If you don't want to run the MySQL server on this VM, you can change these
# defaults to settings that match your external MySQL server. These defaults
# are required to connect to MySQL on this VM.
# In this case you'll need to create the "teamwire" user on that DB with the
# password given above and enable access from this host.
mysql_host: 172.17.0.1
mysql_port: 3306

##############################################################################
## LDAP
##############################################################################

# URI of LDAP server to connect to
# ldap_uri:

# Either "inetorgperson" for standard Linux/OpenLDAP setups
# or "ad" for Active Directory (optional, defaults to "inetorgperson")
# ldap_schema: inetorgperson

# DN and password to use for binding (optional)
# ldap_binddn:
# ldap_bindpw:

# The LDAP server's base DN
# ldap_basedn:

# Both ldap_users_basedn and ldap_groups_basedn may optionally end in the
# suffix "?" where specifies the search scope:
#
#	"base" (only search the LDAP object itself)
#	"one"  (also search the LDAP object's immediate children)
#	"sub"  (also search all descendants, this is the default)
#
# A specified scope is currently ignored for ldap_basedn.

# Base DN for searching users and groups (optional, defaults to ldap_basedn)
# ldap_users_basedn:
# ldap_group_basedn:

# Verify server certificate for ldaps:// URIs (0 or 1)
# ldap_tls_cacert_verify:

# File with certs for server certificate verification (optional)
# ldap_tls_cacert_file:

# Deny user registration without LDAP account (0 or 1)
# ldap_userreg_req_ldapuser:

# Comma-separated list of LDAP groups a user must be additionally member of in
# order to be allowed to register
# ldap_userreg_req_ldapgroups:

##############################################################################
## MAIL
##############################################################################

# The email domain, e.g. "example.com"
domain:

# The sender address of the emails sent by the application when a user or
# administrator registers, e.g. "Example TWAdmin <teamwire@example.com>".
sender_address:

# Configure the SMTP server that handles outgoing mail
#
# The name of the outgoing mail server, e.g. "mail.example.com"
smtp_smarthost:

# The credentials (user name and password) for the outgoing mail server -
# if you do not set these values authentication will be disabled.
smtp_smartuser:
smtp_smartpass:

# The port to connect to. Defaults to 587 (submission)
smtp_port: 587

# Enable TLS. Defaults to yes.
smtp_use_tls: yes

##############################################################################
## DEBUGGING
##############################################################################

# Do not enable any of these parameters unless you know what you are doing

# Do not generate PINs but use a predefined value
# fake_pin: true

# Do not send SMS with the registration PIN
# fake_sms: true

# Use a predefined device confirmation URL in the email confirmation
# fake_email_confirmation: true

# do not encrypt the database
# fake_db_encryption: true
